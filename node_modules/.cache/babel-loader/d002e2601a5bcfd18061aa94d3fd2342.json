{"ast":null,"code":"// Easybase\nimport { useEasybase } from 'easybase-react';\nimport { useEffect } from 'react';\nconst {\n  Frame,\n  sync,\n  configureFrame\n} = useEasybase();\nuseEffect(() => {\n  configureFrame({\n    tableName: \"INVITATIONS\",\n    limit: 200\n  });\n  sync();\n}, []);\n\nconst onChange = (index, column, newValue) => {\n  Frame(index)[column] = newValue;\n  sync();\n};\n\nconst IsInvited = function (name) {\n  return Frame().includes(name);\n}; // return (\n//   <div>\n//     {Frame().map(el => \n//       <div>\n//         <h3>Name: {el.fullname}</h3>\n//         <p>Attending: {el.isattending}</p>\n//         <small>Email: {el.email}</small>\n//       </div>\n//     )}\n//   </div>\n// )\n\n\n_c = IsInvited;\nexport { IsInvited };\n\nvar _c;\n\n$RefreshReg$(_c, \"IsInvited\");","map":{"version":3,"sources":["/Users/jenny.huang/Documents/Portfolio/rsvp/src/Invitations.js"],"names":["useEasybase","useEffect","Frame","sync","configureFrame","tableName","limit","onChange","index","column","newValue","IsInvited","name","includes"],"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,gBAA5B;AACA,SAASC,SAAT,QAA0B,OAA1B;AAGI,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA;AAAf,IAAkCJ,WAAW,EAAnD;AAEAC,SAAS,CAAC,MAAM;AACdG,EAAAA,cAAc,CAAC;AAAEC,IAAAA,SAAS,EAAE,aAAb;AAA4BC,IAAAA,KAAK,EAAE;AAAnC,GAAD,CAAd;AACAH,EAAAA,IAAI;AACL,CAHQ,EAGN,EAHM,CAAT;;AAKA,MAAMI,QAAQ,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgBC,QAAhB,KAA6B;AAC5CR,EAAAA,KAAK,CAACM,KAAD,CAAL,CAAaC,MAAb,IAAuBC,QAAvB;AACAP,EAAAA,IAAI;AACL,CAHD;;AAKA,MAAMQ,SAAS,GAAG,UAASC,IAAT,EAAe;AAC7B,SAAOV,KAAK,GAAGW,QAAR,CAAiBD,IAAjB,CAAP;AACH,CAFD,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAdMD,S;AAgBN,SAAQA,SAAR","sourcesContent":["// Easybase\nimport { useEasybase } from 'easybase-react';\nimport { useEffect } from 'react';\n\n\n    const { Frame, sync, configureFrame } = useEasybase();\n  \n    useEffect(() => {\n      configureFrame({ tableName: \"INVITATIONS\", limit: 200 });\n      sync();\n    }, []);\n  \n    const onChange = (index, column, newValue) => {\n      Frame(index)[column] = newValue;\n      sync();\n    }\n\n    const IsInvited = function(name) {\n        return Frame().includes(name);\n    };\n  \n    // return (\n    //   <div>\n    //     {Frame().map(el => \n    //       <div>\n    //         <h3>Name: {el.fullname}</h3>\n    //         <p>Attending: {el.isattending}</p>\n    //         <small>Email: {el.email}</small>\n    //       </div>\n    //     )}\n    //   </div>\n    // )\n\n    export {IsInvited};\n\n"]},"metadata":{},"sourceType":"module"}